version: '3.8'

services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=adminpass

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq-container
    restart: always
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=adminpass

  postgresql:
    image: postgres:15
    container_name: postgresql-container
    restart: always
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=myuser
      - POSTGRES_PASSWORD=mypassword
      - POSTGRES_DB=mydatabase

  springbootapp:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: springbootapp
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgresql:5432/mydatabase  # Correct service name
      SPRING_DATASOURCE_USERNAME: myuser
      SPRING_DATASOURCE_PASSWORD: mypassword
    ports:
      - "8080:8080"
    depends_on:
      keycloak:
        condition: service_healthy

  keycloak:
    container_name: feedapp-keycloak
    image: quay.io/keycloak/keycloak:25.0.1
    command:
      - start-dev
      - --import-realm
    ports:
      - "8081:8081"
    volumes:
      - ./keycloak/:/opt/keycloak/data/import/
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8081
      KC_HOSTNAME_URL: http://localhost:8081
      KC_HOSTNAME_ADMIN_URL: http://localhost:8081
      KC_HOSTNAME_STRICT_BACKCHANNEL: true
      KC_HTTP_RELATIVE_PATH: /
      KC_HTTP_ENABLED: true
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/127.0.0.1/8081;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;"]
      interval: 30s
      timeout: 5s
      retries: 30
  
  frontend:
    build:
      context: ./frontend/svelte-app
      dockerfile: Dockerfile
    container_name: svelte_frontend
    ports:
      - "57967:57967"
    depends_on:
      - springbootapp

networks:
  default:
    driver: bridge
